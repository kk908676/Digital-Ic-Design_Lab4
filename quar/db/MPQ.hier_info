|MPQ
clk => state[0].CLK
clk => state[1].CLK
clk => state[2].CLK
clk => child_check[0].CLK
clk => child_check[1].CLK
clk => child_check[2].CLK
clk => child_check[3].CLK
clk => child_check[4].CLK
clk => child_check[5].CLK
clk => current_or_child.CLK
clk => current_position[0].CLK
clk => current_position[1].CLK
clk => current_position[2].CLK
clk => current_position[3].CLK
clk => current_position[4].CLK
clk => current_position[5].CLK
clk => val[0].CLK
clk => val[1].CLK
clk => val[2].CLK
clk => val[3].CLK
clk => val[4].CLK
clk => val[5].CLK
clk => val[6].CLK
clk => val[7].CLK
clk => idx[0].CLK
clk => idx[1].CLK
clk => idx[2].CLK
clk => idx[3].CLK
clk => idx[4].CLK
clk => idx[5].CLK
clk => idx[6].CLK
clk => idx[7].CLK
clk => done~reg0.CLK
clk => busy~reg0.CLK
clk => RAM_D[0]~reg0.CLK
clk => RAM_D[1]~reg0.CLK
clk => RAM_D[2]~reg0.CLK
clk => RAM_D[3]~reg0.CLK
clk => RAM_D[4]~reg0.CLK
clk => RAM_D[5]~reg0.CLK
clk => RAM_D[6]~reg0.CLK
clk => RAM_D[7]~reg0.CLK
clk => RAM_A[0]~reg0.CLK
clk => RAM_A[1]~reg0.CLK
clk => RAM_A[2]~reg0.CLK
clk => RAM_A[3]~reg0.CLK
clk => RAM_A[4]~reg0.CLK
clk => RAM_A[5]~reg0.CLK
clk => RAM_A[6]~reg0.CLK
clk => RAM_A[7]~reg0.CLK
clk => RAM_valid~reg0.CLK
clk => output_counter[0].CLK
clk => output_counter[1].CLK
clk => output_counter[2].CLK
clk => output_counter[3].CLK
clk => output_counter[4].CLK
clk => output_counter[5].CLK
clk => output_counter[6].CLK
clk => output_counter[7].CLK
clk => counter[0].CLK
clk => counter[1].CLK
clk => counter[2].CLK
clk => counter[3].CLK
clk => counter[4].CLK
clk => counter[5].CLK
clk => counter[6].CLK
clk => counter[7].CLK
clk => queue[0][0].CLK
clk => queue[0][1].CLK
clk => queue[0][2].CLK
clk => queue[0][3].CLK
clk => queue[0][4].CLK
clk => queue[0][5].CLK
clk => queue[0][6].CLK
clk => queue[0][7].CLK
clk => queue[1][0].CLK
clk => queue[1][1].CLK
clk => queue[1][2].CLK
clk => queue[1][3].CLK
clk => queue[1][4].CLK
clk => queue[1][5].CLK
clk => queue[1][6].CLK
clk => queue[1][7].CLK
clk => queue[2][0].CLK
clk => queue[2][1].CLK
clk => queue[2][2].CLK
clk => queue[2][3].CLK
clk => queue[2][4].CLK
clk => queue[2][5].CLK
clk => queue[2][6].CLK
clk => queue[2][7].CLK
clk => queue[3][0].CLK
clk => queue[3][1].CLK
clk => queue[3][2].CLK
clk => queue[3][3].CLK
clk => queue[3][4].CLK
clk => queue[3][5].CLK
clk => queue[3][6].CLK
clk => queue[3][7].CLK
clk => queue[4][0].CLK
clk => queue[4][1].CLK
clk => queue[4][2].CLK
clk => queue[4][3].CLK
clk => queue[4][4].CLK
clk => queue[4][5].CLK
clk => queue[4][6].CLK
clk => queue[4][7].CLK
clk => queue[5][0].CLK
clk => queue[5][1].CLK
clk => queue[5][2].CLK
clk => queue[5][3].CLK
clk => queue[5][4].CLK
clk => queue[5][5].CLK
clk => queue[5][6].CLK
clk => queue[5][7].CLK
clk => queue[6][0].CLK
clk => queue[6][1].CLK
clk => queue[6][2].CLK
clk => queue[6][3].CLK
clk => queue[6][4].CLK
clk => queue[6][5].CLK
clk => queue[6][6].CLK
clk => queue[6][7].CLK
clk => queue[7][0].CLK
clk => queue[7][1].CLK
clk => queue[7][2].CLK
clk => queue[7][3].CLK
clk => queue[7][4].CLK
clk => queue[7][5].CLK
clk => queue[7][6].CLK
clk => queue[7][7].CLK
clk => queue[8][0].CLK
clk => queue[8][1].CLK
clk => queue[8][2].CLK
clk => queue[8][3].CLK
clk => queue[8][4].CLK
clk => queue[8][5].CLK
clk => queue[8][6].CLK
clk => queue[8][7].CLK
clk => queue[9][0].CLK
clk => queue[9][1].CLK
clk => queue[9][2].CLK
clk => queue[9][3].CLK
clk => queue[9][4].CLK
clk => queue[9][5].CLK
clk => queue[9][6].CLK
clk => queue[9][7].CLK
clk => queue[10][0].CLK
clk => queue[10][1].CLK
clk => queue[10][2].CLK
clk => queue[10][3].CLK
clk => queue[10][4].CLK
clk => queue[10][5].CLK
clk => queue[10][6].CLK
clk => queue[10][7].CLK
clk => queue[11][0].CLK
clk => queue[11][1].CLK
clk => queue[11][2].CLK
clk => queue[11][3].CLK
clk => queue[11][4].CLK
clk => queue[11][5].CLK
clk => queue[11][6].CLK
clk => queue[11][7].CLK
clk => queue[12][0].CLK
clk => queue[12][1].CLK
clk => queue[12][2].CLK
clk => queue[12][3].CLK
clk => queue[12][4].CLK
clk => queue[12][5].CLK
clk => queue[12][6].CLK
clk => queue[12][7].CLK
clk => queue[13][0].CLK
clk => queue[13][1].CLK
clk => queue[13][2].CLK
clk => queue[13][3].CLK
clk => queue[13][4].CLK
clk => queue[13][5].CLK
clk => queue[13][6].CLK
clk => queue[13][7].CLK
clk => queue[14][0].CLK
clk => queue[14][1].CLK
clk => queue[14][2].CLK
clk => queue[14][3].CLK
clk => queue[14][4].CLK
clk => queue[14][5].CLK
clk => queue[14][6].CLK
clk => queue[14][7].CLK
clk => queue[15][0].CLK
clk => queue[15][1].CLK
clk => queue[15][2].CLK
clk => queue[15][3].CLK
clk => queue[15][4].CLK
clk => queue[15][5].CLK
clk => queue[15][6].CLK
clk => queue[15][7].CLK
rst => state[0].PRESET
rst => state[1].ACLR
rst => state[2].PRESET
rst => child_check[0].ACLR
rst => child_check[1].ACLR
rst => child_check[2].ACLR
rst => child_check[3].ACLR
rst => child_check[4].ACLR
rst => child_check[5].ACLR
rst => current_or_child.ACLR
rst => current_position[0].ACLR
rst => current_position[1].ACLR
rst => current_position[2].ACLR
rst => current_position[3].ACLR
rst => current_position[4].ACLR
rst => current_position[5].ACLR
rst => val[0].ACLR
rst => val[1].ACLR
rst => val[2].ACLR
rst => val[3].ACLR
rst => val[4].ACLR
rst => val[5].ACLR
rst => val[6].ACLR
rst => val[7].ACLR
rst => idx[0].ACLR
rst => idx[1].ACLR
rst => idx[2].ACLR
rst => idx[3].ACLR
rst => idx[4].ACLR
rst => idx[5].ACLR
rst => idx[6].ACLR
rst => idx[7].ACLR
rst => done~reg0.ACLR
rst => busy~reg0.PRESET
rst => RAM_D[0]~reg0.ACLR
rst => RAM_D[1]~reg0.ACLR
rst => RAM_D[2]~reg0.ACLR
rst => RAM_D[3]~reg0.ACLR
rst => RAM_D[4]~reg0.ACLR
rst => RAM_D[5]~reg0.ACLR
rst => RAM_D[6]~reg0.ACLR
rst => RAM_D[7]~reg0.ACLR
rst => RAM_A[0]~reg0.ACLR
rst => RAM_A[1]~reg0.ACLR
rst => RAM_A[2]~reg0.ACLR
rst => RAM_A[3]~reg0.ACLR
rst => RAM_A[4]~reg0.ACLR
rst => RAM_A[5]~reg0.ACLR
rst => RAM_A[6]~reg0.ACLR
rst => RAM_A[7]~reg0.ACLR
rst => RAM_valid~reg0.ACLR
rst => output_counter[0].ACLR
rst => output_counter[1].ACLR
rst => output_counter[2].ACLR
rst => output_counter[3].ACLR
rst => output_counter[4].ACLR
rst => output_counter[5].ACLR
rst => output_counter[6].ACLR
rst => output_counter[7].ACLR
rst => counter[0].ACLR
rst => counter[1].ACLR
rst => counter[2].ACLR
rst => counter[3].ACLR
rst => counter[4].ACLR
rst => counter[5].ACLR
rst => counter[6].ACLR
rst => counter[7].ACLR
rst => queue[0][0].ACLR
rst => queue[0][1].ACLR
rst => queue[0][2].ACLR
rst => queue[0][3].ACLR
rst => queue[0][4].ACLR
rst => queue[0][5].ACLR
rst => queue[0][6].ACLR
rst => queue[0][7].ACLR
rst => queue[1][0].ACLR
rst => queue[1][1].ACLR
rst => queue[1][2].ACLR
rst => queue[1][3].ACLR
rst => queue[1][4].ACLR
rst => queue[1][5].ACLR
rst => queue[1][6].ACLR
rst => queue[1][7].ACLR
rst => queue[2][0].ACLR
rst => queue[2][1].ACLR
rst => queue[2][2].ACLR
rst => queue[2][3].ACLR
rst => queue[2][4].ACLR
rst => queue[2][5].ACLR
rst => queue[2][6].ACLR
rst => queue[2][7].ACLR
rst => queue[3][0].ACLR
rst => queue[3][1].ACLR
rst => queue[3][2].ACLR
rst => queue[3][3].ACLR
rst => queue[3][4].ACLR
rst => queue[3][5].ACLR
rst => queue[3][6].ACLR
rst => queue[3][7].ACLR
rst => queue[4][0].ACLR
rst => queue[4][1].ACLR
rst => queue[4][2].ACLR
rst => queue[4][3].ACLR
rst => queue[4][4].ACLR
rst => queue[4][5].ACLR
rst => queue[4][6].ACLR
rst => queue[4][7].ACLR
rst => queue[5][0].ACLR
rst => queue[5][1].ACLR
rst => queue[5][2].ACLR
rst => queue[5][3].ACLR
rst => queue[5][4].ACLR
rst => queue[5][5].ACLR
rst => queue[5][6].ACLR
rst => queue[5][7].ACLR
rst => queue[6][0].ACLR
rst => queue[6][1].ACLR
rst => queue[6][2].ACLR
rst => queue[6][3].ACLR
rst => queue[6][4].ACLR
rst => queue[6][5].ACLR
rst => queue[6][6].ACLR
rst => queue[6][7].ACLR
rst => queue[7][0].ACLR
rst => queue[7][1].ACLR
rst => queue[7][2].ACLR
rst => queue[7][3].ACLR
rst => queue[7][4].ACLR
rst => queue[7][5].ACLR
rst => queue[7][6].ACLR
rst => queue[7][7].ACLR
rst => queue[8][0].ACLR
rst => queue[8][1].ACLR
rst => queue[8][2].ACLR
rst => queue[8][3].ACLR
rst => queue[8][4].ACLR
rst => queue[8][5].ACLR
rst => queue[8][6].ACLR
rst => queue[8][7].ACLR
rst => queue[9][0].ACLR
rst => queue[9][1].ACLR
rst => queue[9][2].ACLR
rst => queue[9][3].ACLR
rst => queue[9][4].ACLR
rst => queue[9][5].ACLR
rst => queue[9][6].ACLR
rst => queue[9][7].ACLR
rst => queue[10][0].ACLR
rst => queue[10][1].ACLR
rst => queue[10][2].ACLR
rst => queue[10][3].ACLR
rst => queue[10][4].ACLR
rst => queue[10][5].ACLR
rst => queue[10][6].ACLR
rst => queue[10][7].ACLR
rst => queue[11][0].ACLR
rst => queue[11][1].ACLR
rst => queue[11][2].ACLR
rst => queue[11][3].ACLR
rst => queue[11][4].ACLR
rst => queue[11][5].ACLR
rst => queue[11][6].ACLR
rst => queue[11][7].ACLR
rst => queue[12][0].ACLR
rst => queue[12][1].ACLR
rst => queue[12][2].ACLR
rst => queue[12][3].ACLR
rst => queue[12][4].ACLR
rst => queue[12][5].ACLR
rst => queue[12][6].ACLR
rst => queue[12][7].ACLR
rst => queue[13][0].ACLR
rst => queue[13][1].ACLR
rst => queue[13][2].ACLR
rst => queue[13][3].ACLR
rst => queue[13][4].ACLR
rst => queue[13][5].ACLR
rst => queue[13][6].ACLR
rst => queue[13][7].ACLR
rst => queue[14][0].ACLR
rst => queue[14][1].ACLR
rst => queue[14][2].ACLR
rst => queue[14][3].ACLR
rst => queue[14][4].ACLR
rst => queue[14][5].ACLR
rst => queue[14][6].ACLR
rst => queue[14][7].ACLR
rst => queue[15][7].ENA
rst => queue[15][6].ENA
rst => queue[15][5].ENA
rst => queue[15][4].ENA
rst => queue[15][3].ENA
rst => queue[15][2].ENA
rst => queue[15][1].ENA
rst => queue[15][0].ENA
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => queue.OUTPUTSELECT
data_valid => counter.OUTPUTSELECT
data_valid => counter.OUTPUTSELECT
data_valid => counter.OUTPUTSELECT
data_valid => counter.OUTPUTSELECT
data_valid => counter.OUTPUTSELECT
data_valid => counter.OUTPUTSELECT
data_valid => counter.OUTPUTSELECT
data_valid => counter.OUTPUTSELECT
data_valid => current_position.OUTPUTSELECT
data_valid => current_position.OUTPUTSELECT
data_valid => current_position.OUTPUTSELECT
data_valid => current_position.OUTPUTSELECT
data_valid => current_position.OUTPUTSELECT
data_valid => current_position.OUTPUTSELECT
data_valid => Mux96.IN10
data[0] => queue.DATAB
data[0] => queue.DATAB
data[0] => queue.DATAB
data[0] => queue.DATAB
data[0] => queue.DATAB
data[0] => queue.DATAB
data[0] => queue.DATAB
data[0] => queue.DATAB
data[0] => queue.DATAB
data[0] => queue.DATAB
data[0] => queue.DATAB
data[0] => queue.DATAB
data[0] => queue.DATAB
data[0] => queue.DATAB
data[0] => queue.DATAB
data[0] => queue.DATAB
data[1] => queue.DATAB
data[1] => queue.DATAB
data[1] => queue.DATAB
data[1] => queue.DATAB
data[1] => queue.DATAB
data[1] => queue.DATAB
data[1] => queue.DATAB
data[1] => queue.DATAB
data[1] => queue.DATAB
data[1] => queue.DATAB
data[1] => queue.DATAB
data[1] => queue.DATAB
data[1] => queue.DATAB
data[1] => queue.DATAB
data[1] => queue.DATAB
data[1] => queue.DATAB
data[2] => queue.DATAB
data[2] => queue.DATAB
data[2] => queue.DATAB
data[2] => queue.DATAB
data[2] => queue.DATAB
data[2] => queue.DATAB
data[2] => queue.DATAB
data[2] => queue.DATAB
data[2] => queue.DATAB
data[2] => queue.DATAB
data[2] => queue.DATAB
data[2] => queue.DATAB
data[2] => queue.DATAB
data[2] => queue.DATAB
data[2] => queue.DATAB
data[2] => queue.DATAB
data[3] => queue.DATAB
data[3] => queue.DATAB
data[3] => queue.DATAB
data[3] => queue.DATAB
data[3] => queue.DATAB
data[3] => queue.DATAB
data[3] => queue.DATAB
data[3] => queue.DATAB
data[3] => queue.DATAB
data[3] => queue.DATAB
data[3] => queue.DATAB
data[3] => queue.DATAB
data[3] => queue.DATAB
data[3] => queue.DATAB
data[3] => queue.DATAB
data[3] => queue.DATAB
data[4] => queue.DATAB
data[4] => queue.DATAB
data[4] => queue.DATAB
data[4] => queue.DATAB
data[4] => queue.DATAB
data[4] => queue.DATAB
data[4] => queue.DATAB
data[4] => queue.DATAB
data[4] => queue.DATAB
data[4] => queue.DATAB
data[4] => queue.DATAB
data[4] => queue.DATAB
data[4] => queue.DATAB
data[4] => queue.DATAB
data[4] => queue.DATAB
data[4] => queue.DATAB
data[5] => queue.DATAB
data[5] => queue.DATAB
data[5] => queue.DATAB
data[5] => queue.DATAB
data[5] => queue.DATAB
data[5] => queue.DATAB
data[5] => queue.DATAB
data[5] => queue.DATAB
data[5] => queue.DATAB
data[5] => queue.DATAB
data[5] => queue.DATAB
data[5] => queue.DATAB
data[5] => queue.DATAB
data[5] => queue.DATAB
data[5] => queue.DATAB
data[5] => queue.DATAB
data[6] => queue.DATAB
data[6] => queue.DATAB
data[6] => queue.DATAB
data[6] => queue.DATAB
data[6] => queue.DATAB
data[6] => queue.DATAB
data[6] => queue.DATAB
data[6] => queue.DATAB
data[6] => queue.DATAB
data[6] => queue.DATAB
data[6] => queue.DATAB
data[6] => queue.DATAB
data[6] => queue.DATAB
data[6] => queue.DATAB
data[6] => queue.DATAB
data[6] => queue.DATAB
data[7] => queue.DATAB
data[7] => queue.DATAB
data[7] => queue.DATAB
data[7] => queue.DATAB
data[7] => queue.DATAB
data[7] => queue.DATAB
data[7] => queue.DATAB
data[7] => queue.DATAB
data[7] => queue.DATAB
data[7] => queue.DATAB
data[7] => queue.DATAB
data[7] => queue.DATAB
data[7] => queue.DATAB
data[7] => queue.DATAB
data[7] => queue.DATAB
data[7] => queue.DATAB
cmd_valid => ~NO_FANOUT~
cmd[0] => state.DATAB
cmd[1] => state.DATAB
cmd[2] => state.DATAB
index[0] => idx.DATAB
index[1] => idx.DATAB
index[2] => idx.DATAB
index[3] => idx.DATAB
index[4] => idx.DATAB
index[5] => idx.DATAB
index[6] => idx.DATAB
index[7] => idx.DATAB
value[0] => val.DATAB
value[1] => val.DATAB
value[2] => val.DATAB
value[3] => val.DATAB
value[4] => val.DATAB
value[5] => val.DATAB
value[6] => val.DATAB
value[7] => val.DATAB
busy <= busy~reg0.DB_MAX_OUTPUT_PORT_TYPE
RAM_valid <= RAM_valid~reg0.DB_MAX_OUTPUT_PORT_TYPE
RAM_A[0] <= RAM_A[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RAM_A[1] <= RAM_A[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RAM_A[2] <= RAM_A[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RAM_A[3] <= RAM_A[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RAM_A[4] <= RAM_A[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RAM_A[5] <= RAM_A[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RAM_A[6] <= RAM_A[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RAM_A[7] <= RAM_A[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RAM_D[0] <= RAM_D[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RAM_D[1] <= RAM_D[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RAM_D[2] <= RAM_D[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RAM_D[3] <= RAM_D[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RAM_D[4] <= RAM_D[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RAM_D[5] <= RAM_D[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RAM_D[6] <= RAM_D[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
RAM_D[7] <= RAM_D[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
done <= done~reg0.DB_MAX_OUTPUT_PORT_TYPE


